// =============================
// Funkcje
// =============================

//ğŸ‘‰ Deklaracja funkcji moÅ¼e zawierac parametry
function greet(name) {
    console.log(this);
    console.log(`CzeÅ›Ä‡, ${name}!`);
}

greet("Jan"); // wywoÅ‚anie moÅ¼e zawieraÄ‡ argumenty

const personThis = {
  name: "Jan",
  greet: function() {
    console.log(`CzeÅ›Ä‡, ${this.name}!`); // funkcja ta ma wÅ‚asny kontekst this
  }
};

personThis.greet(); // "CzeÅ›Ä‡, Jan!"

//ğŸ‘‰ Funkcja zwracajÄ…ca wartoÅ›Ä‡
function add(a, b) {
  return a + b;
}

let sum = add(5, 3);
console.log(sum);

//ğŸ‘‰ Funkcja anonimowa przypisana do zmiennej
const multiply = function (x, y) {
  return x * y;
};

console.log(multiply(4, 2));



// âœ… Uwagi:
// KaÅ¼da funkcja w JS ma wÅ‚asny kontekst (this).
// Funkcja strzaÅ‚kowa nie ma wÅ‚asnego this. Zamiast tego dziedziczy this z miejsca, w ktÃ³rym zostaÅ‚a zdefiniowana (lexical this).



