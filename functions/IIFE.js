

/*
ğŸ”¹ IIFE?
    IIFE = Immediately Invoked Function Expression
    czyli funkcja, ktÃ³ra jest definiowana i natychmiast wykonywana.
    ()() -> podstawowa skÅ‚adnia 
*/

(function() {
  console.log("Hello from IIFE!");
})();


(function(name) {
  console.log("Hello " + name);
  var b = 10;
  console.log(b);
})("Alice"); 


if(true){
    var a = 5;
}
console.log(a);
console.log(b); // ReferenceError poniewaÅ¼ var ma zasiÄ™g funkcyjny


/*

ğŸ”¹ function() { ... } â†’ zwykÅ‚a anonimowa funkcja,
ğŸ”¹ ( ... ) â†’ nawiasy robiÄ… z niej wyraÅ¼enie funkcyjne (Function Expression), a nie deklaracjÄ™,
ğŸ”¹ () â†’ natychmiastowe wywoÅ‚anie tej funkcji.
ğŸ”¹ Zanim mieliÅ›my dostÄ™pne let oraz const var byÅ‚o ogrywane poprzez iife w celu ograniczenia zasiÄ™gu


ğŸ”¹ Do czego siÄ™ uÅ¼ywa?

    Tworzenie prywatnego zakresu (Å¼eby zmienne nie trafiaÅ‚y do globalnego scope).
    Inicjalizacja kodu tylko raz.
    KiedyÅ› byÅ‚o to czÄ™ste rozwiÄ…zanie w JS przed wprowadzeniem let/const i moduÅ‚Ã³w ES6.

*/